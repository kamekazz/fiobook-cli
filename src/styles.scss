/* You can add global styles to this file, and also import other style files */
 @import "~@angular/material/prebuilt-themes/indigo-pink.css";
$main: #032d61;

.bg-main {
    background-color: $main;
}


a{
    cursor: pointer;
}

a:hover{
    text-decoration: none;
    color:rgb(7, 233, 177)
}

button {
    cursor: pointer;
}



body{
    background-color: rgb(48, 47, 47)
}

ul {
    list-style: none;
  }

  .star{
    position: relative;
    display: inline-block;
    font-size: 2rem;
    color: aliceblue;
}

.full{
    color: gold;
}

.half{
    position: absolute;
    display: inline-block;
    overflow: hidden;
    color: gold;
}


// @import '~@angular/material/theming';
// // Plus imports for other components in your app.

// // Include the common styles for Angular Material. We include this here so that you only
// // have to load a single css file for Angular Material in your app.
// // Be sure that you only ever include this mixin once!
// @include mat-core();

// // Define the palettes for your theme using the Material Design palettes available in palette.scss
// // (imported above). For each palette, you can optionally specify a default, lighter, and darker
// // hue. Available color palettes: https://material.io/design/color/
// $candy-app-primary: mat-palette($mat-indigo);
// $candy-app-accent:  mat-palette($mat-pink, A200, A100, A400);

// // The warn palette is optional (defaults to red).
// $candy-app-warn:    mat-palette($mat-red);

// // Create the theme object (a Sass map containing all of the palettes).
// $candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// // Include theme styles for core and each component used in your app.
// // Alternatively, you can import and @include the theme mixins for each component
// // that you are using.
// @include angular-material-theme($candy-app-theme);